::selection {
  background-color: var(--green);
  color: var(--black);
}

.container {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  --gutter: 16px;
  padding-left: var(--gutter);
  padding-right: var(--gutter);

  @include media(min, $sm-min) {
    max-width: $sm-min;
  }
  @include media(min, $md-min) {
    --gutter: 28px;
    max-width: $md-min;
  }
  @include media(min, $lg-min) {
    --gutter: 44px;
    max-width: $lg-min;
  }
  @include media(min, $xl-min) {
    max-width: $xl-min;
  }
  @include media(min, $xll-min) {
    max-width: $xll-min;
  }
  @include media(min, $xll-min) {
    --gutter: 60px;
    &.container--header {
      max-width: 1920px;
    }
  }
}

body {
  min-height: 100vh;
	background-color: var(--black);
  background-color: #111213;

  &.no-scroll {
    overflow: hidden;
  }
  &::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    mix-blend-mode: overlay;
    pointer-events: none;
    @include image-set('/img/noise', 'png');
    background-repeat: repeat;
    z-index: 999;
  }
}

.wrapper__content {
  overflow-x: hidden;
}

.bg-light {
  min-height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  z-index: 1;

  picture {
    display: contents;
  }
  img {
    max-width: unset;
    height: unset;
  }
}

.section {
  min-height: 100vh;
  transition: var(--transition);
  &.active {
    visibility: hidden;
    opacity: 0;
  }
}

.btn {
  background-color: #fff;
  color: var(--black);
  padding: 0 24px;
  border-radius: 32px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: var(--transition);
  text-decoration: none;
  height: 56px;
  cursor: pointer;
  position: relative;
  font-weight: 500;
  &::after {
    content: '';
    width: 30px;
    height: 30px;
    position: absolute;
    margin-top: -15px;
    margin-left: -15px;
    top: 50%;
    left: 50%;
    background-image: url('/img/loader@2x.png');
    background-size: 30px;
    animation: loader 2s infinite linear;
    visibility: hidden;
    opacity: 0;
    transition: var(--transition);
  }
  &:hover {
    background-color: var(--green);
  }
  &:active {
    background-color: #95C196;
  }
  &:disabled {
    opacity: .3;
    pointer-events: none;
  }
  &.loading {
    span {
      visibility: hidden;
      opacity: 0;
    }
    &::after {
      visibility: visible;
      opacity: 1;
    }
  }
}

@keyframes loader {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}

// Lazyloading images
.lazyload, .lazyloading {
  opacity: 0;
}

.lazyloaded {
  opacity: 1;
  transition: opacity var(--transition-img);
}

// Animations
@keyframes rotation {
  to { transform: rotate(-360deg); }
}
@keyframes swimming {
  0%, 50%, 100% {
    transform: translate3d(0,0,0);
  }
  25% {
    transform: translate3d(0,-5px,0);
  }
  75% {
    transform: translate3d(0,-3px,0);
  }
}
@keyframes loading {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

// loader //del
.loader {
  display: none;
}

// Bubbles
.bubbles {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: opacity var(--transition);
  //opacity: 0;

  &_show {
    opacity: 1;
  }
}
.bubble {
  display: block;
  position: absolute;
  bottom: -30px;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.01);
  box-shadow: inset -2px 2px 5px rgba(255, 255, 255, 0.25);
  opacity: .5;
  animation: bubble 20s linear infinite;
  transition: opacity 1s ease-out;

  &:nth-child(3n) {
    opacity: .3;
  }
  &:nth-child(4n) {
    opacity: .4;
  }
}

@keyframes bubble {
  0% {
    transform: translateY(0%);
  }
  100% {
    transform: translateY(-5000%);
  }
}


// Text animations
.reveal-text {
  visibility: hidden;
}
.line {
  position: relative;
  overflow: hidden;
  display: flex;
}
.rev {
  height: 100vh;
}

// Animations
[data-animation^=fade] {
  opacity: 0;
  transition-timing-function: cubic-bezier(.25,.1,.25,1);
  transition-duration: .3s;

  &.animate {
    opacity: 1;
    transform: translate3d(0,0,0);
  }
}
[data-animation=fade-up] {
  transform: translate3d(0,20px,0);
}